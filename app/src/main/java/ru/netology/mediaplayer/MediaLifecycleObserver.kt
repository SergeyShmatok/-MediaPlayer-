package ru.netology.mediaplayer

import android.media.MediaPlayer
import androidx.lifecycle.Lifecycle
import androidx.lifecycle.LifecycleEventObserver
import androidx.lifecycle.LifecycleOwner
import javax.inject.Inject


class MediaLifecycleObserver @Inject constructor(
) : LifecycleEventObserver {   // –î–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª

    var playbackPosition = 0

    var pauseOn = false

    var mediaPlayer: MediaPlayer? = MediaPlayer()

    fun play(url: String) {

        mediaPlayer?.setDataSource(url)

        mediaPlayer?.isLooping = false
        pauseOn = false

        mediaPlayer?.prepareAsync()
        mediaPlayer?.setOnPreparedListener { it ->
//            mediaPlayer?.seekTo(450000)
            it.start()
        }

    }

    fun playAfterPause() {
        mediaPlayer?.seekTo(playbackPosition)
        mediaPlayer?.start()
        pauseOn = false
    }


    fun pause() {
        mediaPlayer?.pause()
        playbackPosition = mediaPlayer?.currentPosition ?: 0
        pauseOn = true
    }


    override fun onStateChanged(source: LifecycleOwner, event: Lifecycle.Event) {
        // –í –Ω–µ–≥–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç –∏—Å—Ç–æ—á–Ω–∏–∫üëÜ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ (Fragment –∏–ª–∏ Activity)
        // –ò event –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞

        when (event) { // –û–±—Ä–∞–±–æ—Ç–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞:

            Lifecycle.Event.ON_PAUSE -> mediaPlayer?.pause()
            Lifecycle.Event.ON_STOP -> {
                mediaPlayer?.release()
                mediaPlayer = null
            }

            Lifecycle.Event.ON_DESTROY -> source.lifecycle.removeObserver(this)
            // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: observer ‚Äî –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–¥–∞–ª–∏—Ç—åüëÜ.
            else -> Unit

            // –ü–æ—Ç—Ä–µ–±—É—é—Ç—Å—è: ON_PAUSE, ON_STOP, ON_DESTROY. –û—Å—Ç–∞–≤–∏–º —Ç–æ–ª—å–∫–æ –∏—Ö.

        }


    }

}